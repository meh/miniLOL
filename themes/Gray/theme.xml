<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE theme [
    <!ELEMENT theme (initialize?, finalize?, styles?)>
    <!ATTLIST theme
        name   CDATA #REQUIRED
        author CDATA #REQUIRED
    >

    <!ELEMENT initialize (#PCDATA)>

    <!ELEMENT finalize (#PCDATA)>

    <!ELEMENT styles (style+)>
    
    <!ELEMENT style EMPTY>
    <!ATTLIST style
        name    CDATA   #REQUIRED
    >
]>

<theme name="Gray" author="meh." homepage="http://meh.doesntexist.org" menu="menu" content="body">
    <thanks><![CDATA[
        Thanks to <a href="http://www.webdesignerwall.com/" target="_blank">Web Designer Wall</a> for their 
        <a href="http://www.webdesignerwall.com/tutorials/css3-dropdown-menu/" target="_blank">CSS3 Dropdown Menu</a>
    ]]></thanks>

    <initialize><![CDATA[
        $('siteTitle').update(miniLOL.config["core"].logo || miniLOL.config["core"].siteTitle)

        miniLOL.theme.data.resize = function () {
            $('body').setStyle({
                height: (document.viewport.getHeight()-(60+$('head').getHeight()+20))+"px"
            });
        };

        Event.observe(window, "resize", miniLOL.theme.data.resize);
        Event.observe(document, ":module.load", miniLOL.theme.data.resize);

        Event.observe(document, ":initialized", function () {
            miniLOL.theme.data.resize.delay(0.1);
        });

        miniLOL.theme.data.resize.defer();

        miniLOL.theme.data.current = function (event) {
            var matches = unescape(event.memo).match(/(#[^&]*)/)
            var url;

            if (matches) {
                url = matches[1];
            }
            else {
                url = miniLOL.config["core"].homePage
            }

            if (url[0] != '#') {
                url = "#" + url;
            }

            var element;

            $A(miniLOL.theme.menu().getElementsByTagName("a")).each(function (item) {
                if (item.getAttribute("href").include(url)) {
                    element = item;
                }
                else if (url == miniLOL.config["core"].homePage && item.getAttribute("href") == "#") {
                    element = item;
                }

                if (element) {
                    throw $break;
                }
            });

            if (element) {
                $$(".current").each(function (element) {
                    element.removeClassName("current");
                });

                while (element.parentNode.getAttribute("id") != "menu") {
                    element = element.parentNode;
                }

                element.addClassName('current');
            }
            else if ($$(".current").length == 0) {
                $($("menu").getElementsByTagName("li")[0]).addClassName("current");
            }
        }

        miniLOL.theme.data.current.change = function () {
            miniLOL.theme.data.current({ memo: location.href });
        }

        Event.observe(document, ":go", miniLOL.theme.data.current);
        Event.observe(document, ":menu.change", miniLOL.theme.data.current.change);
        Event.observe(document, ":theme.loaded", miniLOL.theme.data.current.change);
    ]]></initialize>

    <finalize><![CDATA[
        Event.stopObserving(window, "resize", miniLOL.theme.data.resize);
        Event.stopObserving(document, ":module.load", miniLOL.theme.data.resize);

        Event.stopObserving(document, ":menu.change", miniLOL.theme.data.current.change);
        Event.stopObserving(document, ":theme.loaded", miniLOL.theme.data.current.change);
        Event.stopObserving(document, ":go", miniLOL.theme.data.current);
    ]]></finalize>

    <styles>
        <style name="core"/>
        <style name="menu"/>

        <style name="Blog/style"/>
        <style name="Syntax Highlighter/style"/>
    </styles>
</theme>
